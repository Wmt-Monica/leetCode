<application>
  <component name="AppStorage">
    <histories>
      <item value="Fetching config from server at: http://localhost:8888" />
      <item value="Could not locate PropertySource: I/O error on GET request for &quot;http://localhost:8888/springcloud_provider_dept_8001/default&quot;: Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect" />
      <item value="dept" />
      <item value="部门" />
      <item value="实体  " />
      <item value="实体  部门" />
      <item value="实体  部分" />
      <item value="实体" />
      <item value="Dept" />
      <item value="说明" />
      <item value="Element 'properties' cannot have character [children], because the type's content type is element-only." />
      <item value="Correct the classpath of your application so that it contains a single, compatible version of org.springframework.boot.builder.SpringApplicationBuilder " />
      <item value="org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - Application failed to start due to an exception java.lang.NoSuchMethodError: org.springframework.boot.builder.SpringApplicationBuilder.&lt;init&gt;([Ljava/lang/Object;)V" />
      <item value="失败" />
      <item value="消费者" />
      <item value="提供者" />
      <item value="log4j:WARN No appenders could be found for logger (org.springframework.core.env.StandardEnvironment). log4j:WARN Please initialize the log4j system properly." />
      <item value="步骤" />
      <item value="地址" />
      <item value="1:29:09,899 DEBUG ExceptionHandlerExceptionResolver:137 - Resolving exception from handler [public java.lang.String cn.dreamplume.controller.UserServiceController.sayHello()]: com.alibaba.dubbo.rpc.RpcException: No provider available from registry 192.168.94.129:2181 for service cn.dreamplume.service.UserService on consumer 192.168.94.1 use dubbo version 2.6.0, may be providers disabled or not registered ?" />
      <item value="No provider available from registry 192.168.94.129:2181 for service cn.dreamplume.service.UserService on consumer 192.168.94.1 use dubbo version 2.6.0, may be providers disabled or not registered ? &#9;at com.alibaba.dubbo.registry.integration" />
      <item value="HTTP Status 500 - Request processing failed; nested exception is com.alibaba.dubbo.rpc.RpcException: No provider available from registry 192.168.94.129:2181 for service cn.dreamplume.service.UserService on consumer 192.168.94.1 use dubbo version 2.6.0, may be providers disabled or not registered ?" />
      <item value="org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.alibaba.dubbo.rpc.RpcException: No provider available from registry 192.168.94.129:2181 for service cn.dreamplume.service.UserService on consumer 192.168.94.1 use dubbo version 2.6.0, may be providers disabled or not registered ? &#9;org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982) &#9;org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) &#9;javax.servlet.http.HttpServlet.service(HttpServlet.java:621) &#9;org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) &#9;javax.servlet.http.HttpServlet.service(HttpServlet.java:728) &#9;org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)" />
      <item value="Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.2:war (default-war) on project provides: Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode)" />
      <item value="[ERROR] Some problems were encountered while processing the POMs: 'packaging' with value 'war' is invalid. Aggregator projects require 'pom' as packaging. @ line 9, column 16" />
      <item value="Failed to execute goal org.apache.maven.plugins:maven-war-plugin:2.2:war (default-war) on project interface-dubbo: Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode)" />
      <item value="'org.springframework.web.servlet.DispatcherServlet' is not assignable to 'javax.servlet.Servlet " />
      <item value="消费" />
      <item value="提供发" />
      <item value="Hahn" />
      <item value="service  server" />
      <item value="service" />
      <item value="server" />
      <item value="父母" />
      <item value="父亲" />
      <item value="付清" />
      <item value="APPLICATION FAILED TO START ***************************  Description:  Parameter 0 of constructor in cn.dreamplume.entity.ZkLock required a bean of type 'java.lang.String' that could not be found.  The injection point has the following annotations: &#9;- @org.springframework.beans.factory.annotation.Autowired(required=true)   Action:  Consider defining a bean of type 'java.lang.String' in your configuration. " />
      <item value=" A {@link NavigableSet} implementation based on a {@link TreeMap}.  * The elements are ordered using their {@linkplain Comparable natural  * ordering}, or by a {@link Comparator} provided at set creation  * time, depending on which constructor is used.  *  * &lt;p&gt;This implementation provides guaranteed log(n) time cost for the basic  * operations ({@code add}, {@code remove} and {@code contains}).  *  * &lt;p&gt;Note that the ordering maintained by a set (whether or not an explicit  * comparator is provided) must be &lt;i&gt;consistent with equals&lt;/i&gt; if it is to  * correctly implement the {@code Set} interface.  (See {@code Comparable}  * or {@code Comparator} for a precise definition of &lt;i&gt;consistent with  * equals&lt;/i&gt;.)  This is so because the {@code Set} interface is defined in  * terms of the {@code equals} operation, but a {@code TreeSet} instance  * performs all element comparisons using its {@code compareTo} (or  * {@code compare}) method, so two elements that are deemed equal by this method  * are, from the standpoint of the set, equal.  The behavior of a set  * &lt;i&gt;is&lt;/i&gt; well-defined even if its ordering is inconsistent with equals; it  * just fails to obey the general contract of the {@code Set} interface.  *  * &lt;p&gt;&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt;  * If multiple threads access a tree set concurrently, and at least one  * of the threads modifies the set, it &lt;i&gt;must&lt;/i&gt; be synchronized  * externally.  This is typically accomplished by synchronizing on some  * object that naturally encapsulates the set.  * If no such object exists, the set should be &quot;wrapped&quot; using the  * {@link Collections#synchronizedSortedSet Collections.synchronizedSortedSet}  * method.  This is best done at creation time, to prevent accidental  * unsynchronized access to the set: &lt;pre&gt;  *   SortedSet s = Collections.synchronizedSortedSet(new TreeSet(...));&lt;/pre&gt;  *  * &lt;p&gt;The iterators returned by this class's {@code iterator} method are  * &lt;i&gt;fail-fast&lt;/i&gt;: if the set is modified at any time after the iterator is  * created, in any way except through the iterator's own {@code remove}  * method, the iterator will throw a {@link ConcurrentModificationException}.  * Thus, in the face of concurrent modification, the iterator fails quickly  * and cleanly, rather than risking arbitrary, non-deterministic behavior at  * an undetermined time in the future.  *  * &lt;p&gt;Note that the fail-fast behavior of an iterator cannot be guaranteed  * as it is, generally speaking, impossible to make any hard guarantees in the  * presence of unsynchronized concurrent modification.  Fail-fast iterators  * throw {@code ConcurrentModificationException} on a best-effort basis.  * Therefore, it would be wrong to write a program that depended on this  * exception for its correctness:   &lt;i&gt;the fail-fast behavior of iterators  * should be used only to detect bugs.&lt;/i&gt;  *  * &lt;p&gt;This class is a member of the  * &lt;a href=&quot;{@docRoot}/../technotes/guides/collections/index.html&quot;&gt;  * Java Collections Framework&lt;/a&gt;.  *  * @param &lt;E&gt; the type of elements maintained by this set  *  * @author  Josh Bloch" />
      <item value="sequentikl" />
      <item value="ephemenral" />
      <item value="sphemeral" />
      <item value="EPHEMERAL_SEQUENTIAL" />
      <item value="lock" />
      <item value="countDown" />
      <item value="NodeDeleted" />
      <item value="await" />
      <item value="WatchedEvent" />
      <item value="SyncConnected" />
      <item value="connectedSignal" />
      <item value="KeeperState" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="66" />
        <entry key="ENGLISH" value="66" />
        <entry key="CATALAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>