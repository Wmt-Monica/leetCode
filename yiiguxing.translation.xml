<application>
  <component name="AppStorage">
    <histories>
      <item value="计算" />
      <item value="计算式" />
      <item value="运算符" />
      <item value="简单计算机" />
      <item value="空了" />
      <item value="空" />
      <item value="满" />
      <item value="栈" />
      <item value="约瑟夫" />
      <item value="环形链表" />
      <item value="反转" />
      <item value="打印" />
      <item value="有序" />
      <item value="双向链表" />
      <item value="次数" />
      <item value="合并" />
      <item value="倒数" />
      <item value="遍历" />
      <item value="指针" />
      <item value="简单链表" />
      <item value="接口" />
      <item value="实现" />
      <item value="行" />
      <item value="列" />
      <item value="写入" />
      <item value="输入" />
      <item value="队列头" />
      <item value="判空" />
      <item value="队列" />
      <item value="解压" />
      <item value="压缩数组" />
      <item value="有效数据个数" />
      <item value="压缩" />
      <item value="参数" />
      <item value="原始" />
      <item value="Failed to load ApplicationContext  &#9;at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext" />
      <item value="to acknowledge all messages up to and    including the supplied delivery tag;" />
      <item value="to acknowledge all messages up to and      * including the supplied delivery tag" />
      <item value="to reject just the supplied  delivery tag." />
      <item value="to reject all messages up to and including  the supplied delivery tag" />
      <item value="to reject all messages up to and including      * the supplied delivery tag" />
      <item value="true to reject all messages up to and including      * the supplied delivery tag; false to reject just the supplied      * delivery tag." />
      <item value="true to acknowledge all messages up to and      * including the supplied delivery tag; false to acknowledge just      * the supplied delivery tag." />
      <item value=" true to reject all messages up to and including" />
      <item value="可靠" />
      <item value="Could not autowire. Qualified bean must be of 'Exchange' type. " />
      <item value="/**  * &lt;p&gt;Interface for application callback objects to receive notifications and messages from  * a queue by subscription.  * Most implementations will subclass {@link DefaultConsumer}.  * &lt;/p&gt;  * &lt;p&gt;  * The methods of this interface are invoked in a dispatch  * thread which is separate from the {@link Connection}'s thread. This  * allows {@link Consumer}s to call {@link Channel} or {@link  * Connection} methods without causing a deadlock.  * &lt;/p&gt;  * The {@link Consumer}s on a particular {@link Channel} are invoked serially on one or more  * dispatch threads. {@link Consumer}s should avoid executing long-running code  * because this will delay dispatch of messages to other {@link Consumer}s on the same  * {@link Channel}.  *  * For a lambda-oriented syntax, use {@link DeliverCallback},  * {@link CancelCallback}, and {@link ConsumerShutdownSignalCallback}.  *  * @see Channel#basicConsume(String, boolean, String, boolean, boolean, java.util.Map, Consumer)  * @see Channel#basicCancel  */" />
      <item value="@param queue the name of the queue" />
      <item value="Declare a queue      * @see com.rabbitmq.client.AMQP.Queue.Declare      * @see com.rabbitmq.client.AMQP.Queue.DeclareOk      * @param queue the name of the queue      * @param durable true if we are declaring a durable queue (the queue will survive a server restart)      * @param exclusive true if we are declaring an exclusive queue (restricted to this connection)      * @param autoDelete true if we are declaring an autodelete queue (server will delete it when no longer in use)      * @param arguments other properties (construction arguments) for the queue      * @return a declaration-confirm method to indicate the queue was successfully declared      * @throws java.io.IOException if an error is encountered" />
      <item value="Like {@link Channel#queueDeclare(String, boolean, boolean, boolean, java.util.Map)} but sets nowait      * flag to true and returns no result (as there will be no response from the server)." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="37" />
        <entry key="ENGLISH" value="38" />
        <entry key="CATALAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>